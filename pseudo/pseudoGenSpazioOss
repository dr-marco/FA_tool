GEN_SPAZIO_OSS(Net, list_osservable):
	
	# INIZIALIZE VARIABLE
	create list_space_nodes as empty list
	create list_routes as empty list
	create tail_nodes as empty list
	
	# CREATE INITIAL NODE
	create initial_node as <Net.get_state_list_FAs, Net.get_content_list_LINKs, index_oss = 0>
	set initial_node.final as True
	
	add initial_node to list_space_nodes
	push initial_node to tail_nodes
	
	# CREATE&ADDING NODE TO SPACE
	while tail_nodes is not empty:
		get tail_nodes.firstElement as node_current
		
		# GET ACTUAL STATE OF ALL FINITE AUTOMATES
		foreach state_FA in node_current.state_list_FAs:
			
			# GET ONLY OUTPUT TRANSACTION FROM STATE
			foreach transaction in state_FA.output_transaction:
				
				# CHECK IF PROPERLY LINK HAS EVENT TO ACTIVATE OUTPUT_TRANSACTION
				if transaction.event couples is present in node_current.content_list_LINKs:
					
					if transaction.osservation_label exist and transaction.osservation_label is not the next(list_osservable) from node.index_oss:
						break 
					
					get transaction.finish_state as new_state
					get transaction.output_events as link_events_to_update
					
					# CREATE NEW NODE TO ADD TO THE SPACE
					create node_to_add as copy of node_current
					update state_FA in node.state_list_FAs with new_state
					update content_list_LINKs couples with link_events_to_update
					
					# CREATE AND ADD THE ROUTE FROM THE OLD NODE TO THE NEW
					create route_to_add as <node_current, transaction, node_to_add>
					add route_to_add to list_routes

					
					# ADD NODE ONLY IF IS NEW
					if node_to_add is not in list_space_nodes:
						if transaction.osservation_label exist:
							increment node_to_add.index_oss from node.index_oss
						
						# SET NODE AS FINAL ONLY IF ALL LINKs ARE EMPTY
						if all node_to_add.content_list_LINKs has empty link.content
							set node_to_add.final as True
						
						add node_to_add to list_space_nodes
						push node_to_add to tail_nodes
							
		
		pop tail_nodes

		
	# PRUNING
	# apply BFS algorithm to remove nodes from space that don't bring to a final nodes
	BFS(foreach list_space_nodes where node.final is True, list_routes)
	
	# RENAME
	foreach node in list_space_nodes:
		set node.alias as incremental(id) 
	
	create SPACE as <initial_node, list_space_nodes, list_routes>
	
	return SPACE
	
